<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--项目基本信息(必填)-->
	<groupId>exp.aup</groupId>
	<artifactId>auto-upgrader</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>auto-upgrader</name>
	<description>软件自动升级插件</description>
	<url>项目SVN路径(可选)</url>
	<inceptionYear>2018-04-28</inceptionYear>

	<!--项目的问题管理系统(可选)-->
	<issueManagement>
		<system>EXPLIBS-API-ONLINE</system>
		<url>https://lyy289065406.github.io/api-online/</url>
	</issueManagement>
	
	<!--项目的问题追踪系统(可选)-->
	<ciManagement>
		<system>jenkins</system>
		<url>http://127.0.0.1:8080/jenkins/</url>
	</ciManagement>
	
	<!-- 软件配置管理 -->
	<scm>
		<!-- 项目SVN主干目录（需保证目录已存在） -->
		<connection>scm:svn:http://127.0.0.1:81/svn/release/???/trunk</connection>
		<developerConnection>scm:svn:http://127.0.0.1:81/svn/release/???/trunk</developerConnection>
		<url>scm:svn:http://127.0.0.1:81/svn/release/???/trunk</url>
	</scm>

	<!-- 变量定义 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<release.dir>${project.build.directory}/${project.artifactId}-${project.version}</release.dir>
		<jdk.version>1.6</jdk.version>
		<explibs.version>1.0-SNAPSHOT</explibs.version>
		<mrp.plugin.version>1.0-SNAPSHOT</mrp.plugin.version>
	</properties>

	<!-- 项目依赖 -->
	<dependencies>
	
		<!-- 经验库 -->
    	<dependency>
		  <groupId>exp.libs</groupId>
		  <artifactId>exp-libs</artifactId>
		  <version>${explibs.version}</version>
		  <exclusions>
		    <exclusion>
	          <groupId>mysql</groupId>
		  	  <artifactId>mysql-connector-java</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>com.oracle</groupId>
		  	  <artifactId>ojdbc</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>redis.clients</groupId>
		  	  <artifactId>jedis</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.eclipse</groupId>
          	  <artifactId>draw2d</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.jgraph</groupId>
		  	  <artifactId>jGraph</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>com.realpersist</groupId>
		  	  <artifactId>schemaeditor</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>exp.libs</groupId>
          	  <artifactId>jvm-agent</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>net.sf.ehcache</groupId>
		      <artifactId>ehcache</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>exp.libs</groupId>
              <artifactId>jep</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.quartz</groupId>
	          <artifactId>quartz-all</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>jsch</groupId>
	          <artifactId>jsch</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>javax.activation</groupId>
	          <artifactId>activation</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>javax.mail</groupId>
		      <artifactId>mail</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.activemq</groupId>
              <artifactId>activemq-all</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.axis2</groupId>
	          <artifactId>axis2-adb</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.ws.xmlschema</groupId>
	          <artifactId>xmlschema-core</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.axis2</groupId>
	          <artifactId>axis2-transport-http</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.axis2</groupId>
	          <artifactId>axis2-transport-local</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.cxf</groupId>
	          <artifactId>cxf-rt-frontend-jaxws</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.apache.cxf</groupId>
	          <artifactId>cxf-rt-transports-http</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>net.webservices.client</groupId>
	          <artifactId>wsdl4j</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>net.webservices.client</groupId>
	          <artifactId>jabref</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>net.webservices.client</groupId>
	          <artifactId>soapui</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>net.webservices.client</groupId>
	          <artifactId>soapui-xmlbeans</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.seleniumhq.selenium</groupId>
	          <artifactId>selenium-java</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>com.codeborne</groupId>
	          <artifactId>phantomjsdriver</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.seleniumhq.selenium</groupId>
	          <artifactId>selenium-chrome-driver</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.seleniumhq.selenium</groupId>
	          <artifactId>selenium-htmlunit-driver</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>com.sun.media</groupId>
		  	  <artifactId>jai-imageio</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.tensorflow</groupId>
	          <artifactId>tensorflow</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.tensorflow</groupId>
	          <artifactId>libtensorflow</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.tensorflow</groupId>
	          <artifactId>libtensorflow_jni</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>sun.misc</groupId>
		  	  <artifactId>base64</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.java-websocket</groupId>
		      <artifactId>Java-WebSocket</artifactId>
	        </exclusion>
	      </exclusions>
		</dependency>
		
		<!-- 单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!-- 项目构建 -->
	<build>
		<plugins>

			<!-- 指定项目JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			
			<!-- 版本打包插件，在dos跳转到项目根目录，依次执行（需保证没有引用快照、本地与SVN服务器内容完全一致）: 
				1 发布基线到svn: mvn release:prepare 
				2 发布引用到私服 : mvn release:perform -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<!-- 项目的SVN基线目录（需保证目录已存在） -->
					<tagBase>http://127.0.0.1:81/svn/release/???/tags</tagBase>
				</configuration>
			</plugin>

			<!-- 测试插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<!-- 解决控制台输出乱码问题 -->
					<forkMode>once</forkMode>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<systemProperties>
						<property>
							<name>net.sourceforge.cobertura.datafile</name>
							<value>target/cobertura/cobertura.ser</value>
						</property>
					</systemProperties>
					<!-- 项目打包时是否跳过d单元测试 -->
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			
			<!-- Ant插件：项目部署文件复制 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>ant-build</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>拷贝项目配置文件</echo>
								<copy todir="${release.dir}/conf">
									<fileset dir="conf" />
								</copy>
								<echo>拷贝文档</echo>
								<copy todir="${release.dir}/doc/04_维护文档">
									<fileset dir="doc/04_维护文档" />
								</copy>
								<copy todir="${release.dir}/doc/06_使用文档">
									<fileset dir="doc/06_使用文档" />
								</copy>
								<copy todir="${release.dir}/doc/07_演示文档">
									<fileset dir="doc/07_演示文档" />
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- 项目发布插件(自动生成脚本) -->
			<plugin>
				<groupId>exp.libs</groupId>
				<artifactId>mojo-release-plugin</artifactId>
				<version>${mrp.plugin.version}</version>
				<executions>
					<execution>
						<id>mrp</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
						<configuration>
							<mavenRepository>D:\mavenRepository</mavenRepository>
							<verClass>exp.au.Version</verClass>
							<mainClass>exp.au.PatchInstaller</mainClass>
							<mainArgs></mainArgs>
							<charset>UTF-8</charset>
							<jdkPath>java</jdkPath>
							<xms>32m</xms>
							<xmx>256m</xmx>
							<jdkParams></jdkParams>
							<noVerJarRegex>exp-?libs-.*</noVerJarRegex> <!-- 不使用版本号的依赖构件(正则式) -->
							<proguard>false</proguard>  <!-- 是否使用混淆包(需配置混淆打包插件) -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- 打包源码: 项目发布基线版本时会自动打包源码，不要启用此插件，否则会失败 -->
			<!-- plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
							<goal>test-jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin -->

			<!-- 打包javadoc: 项目发布基线版本时会自动打包javadoc，若报错不要启用此插件 -->
            <!-- javadoc插件会强制使用GBK读取pom文件的内容, 若得到的html网页标题乱码,  -->
            <!-- 则需要通过Run Configurations -> 自定义Maven install命令 -> Common -> Encoding:GBK 确保不会乱码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
               		<aggregate>true</aggregate>
                	<charset>UTF-8</charset>
                	<encoding>UTF-8</encoding>
                	<docencoding>UTF-8</docencoding>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

		</plugins>
	</build>

	<!-- 项目发布管理 -->
	<distributionManagement>
	
		<!-- 私服地址 ，基线仓库 -->
		<repository>
			<id>Releases</id>
			<url>http://127.0.0.1:8081/nexus/content/repositories/releases</url>
		</repository>
		
		<!-- 私服地址 ，快照仓库 -->
		<snapshotRepository>
			<id>Snapshots</id>
			<url>http://127.0.0.1:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>
